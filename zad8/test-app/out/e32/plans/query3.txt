Plan hash value: 2539870365
 
---------------------------------------------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                                            | Name                           | Rows  | Bytes |TempSpc| Cost (%CPU)| Time     | Pstart| Pstop |
---------------------------------------------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                                     |                                |     1 |  3168 |       | 11396   (2)| 00:00:01 |       |       |
|   1 |  NESTED LOOPS                                        |                                |     1 |  3168 |       | 11396   (2)| 00:00:01 |       |       |
|   2 |   NESTED LOOPS                                       |                                |     1 |  3161 |       | 11395   (2)| 00:00:01 |       |       |
|*  3 |    HASH JOIN                                         |                                |     1 |  3150 |       | 11394   (2)| 00:00:01 |       |       |
|   4 |     NESTED LOOPS                                     |                                |     1 |  3124 |       |  9301   (2)| 00:00:01 |       |       |
|   5 |      NESTED LOOPS                                    |                                |     1 |  3124 |       |  9301   (2)| 00:00:01 |       |       |
|*  6 |       HASH JOIN                                      |                                |     1 |  3101 |       |  9300   (2)| 00:00:01 |       |       |
|   7 |        JOIN FILTER CREATE                            | :BF0000                        |     4 | 12352 |       |  3736   (1)| 00:00:01 |       |       |
|*  8 |         HASH JOIN                                    |                                |     4 | 12352 |       |  3736   (1)| 00:00:01 |       |       |
|   9 |          NESTED LOOPS                                |                                |   108 |   113K|       |  1508   (1)| 00:00:01 |       |       |
|  10 |           NESTED LOOPS                               |                                |   108 |   113K|       |  1508   (1)| 00:00:01 |       |       |
|  11 |            PARTITION RANGE ITERATOR                  |                                |   108 |   110K|       |  1400   (1)| 00:00:01 |   KEY |   KEY |
|* 12 |             TABLE ACCESS BY LOCAL INDEX ROWID BATCHED| REPRIMAND_CLONE                |   108 |   110K|       |  1400   (1)| 00:00:01 |   KEY |   KEY |
|* 13 |              INDEX RANGE SCAN                        | REPRIMAND_CLONE_ISSUE_DATE_IDX |  1988 |       |       |     6   (0)| 00:00:01 |   KEY |   KEY |
|* 14 |            INDEX UNIQUE SCAN                         | SYS_C008848                    |     1 |       |       |     0   (0)| 00:00:01 |       |       |
|  15 |           TABLE ACCESS BY INDEX ROWID                | PRISONER                       |     1 |    23 |       |     1   (0)| 00:00:01 |       |       |
|* 16 |          VIEW                                        |                                |  9870 |    18M|       |  2228   (2)| 00:00:01 |       |       |
|  17 |           SORT GROUP BY                              |                                |  9870 |   751K|   872K|  2228   (2)| 00:00:01 |       |       |
|* 18 |            HASH JOIN                                 |                                |  9870 |   751K|       |  2046   (2)| 00:00:01 |       |       |
|* 19 |             TABLE ACCESS FULL                        | SENTENCE                       |  9870 |   587K|       |  1399   (3)| 00:00:01 |       |       |
|  20 |             TABLE ACCESS FULL                        | PRISONER                       |   299K|  4980K|       |   645   (1)| 00:00:01 |       |       |
|  21 |        VIEW                                          |                                |  1063 | 13819 |       |  5564   (2)| 00:00:01 |       |       |
|* 22 |         FILTER                                       |                                |       |       |       |            |          |       |       |
|  23 |          JOIN FILTER USE                             | :BF0000                        |  1063 | 37205 |       |  5564   (2)| 00:00:01 |       |       |
|  24 |           HASH GROUP BY                              |                                |  1063 | 37205 |       |  5564   (2)| 00:00:01 |       |       |
|* 25 |            FILTER                                    |                                |       |       |       |            |          |       |       |
|* 26 |             HASH JOIN                                |                                |   689K|    23M|    10M|  5523   (1)| 00:00:01 |       |       |
|  27 |              PARTITION RANGE ALL                     |                                |   441K|  5608K|       |  1408   (1)| 00:00:01 |     1 |    25 |
|  28 |               TABLE ACCESS FULL                      | REPRIMAND_CLONE                |   441K|  5608K|       |  1408   (1)| 00:00:01 |     1 |    25 |
|* 29 |              HASH JOIN                               |                                |   468K|     9M|  7856K|  2826   (1)| 00:00:01 |       |       |
|  30 |               TABLE ACCESS FULL                      | SENTENCE                       |   473K|  2310K|       |  1379   (1)| 00:00:01 |       |       |
|  31 |               TABLE ACCESS FULL                      | PRISONER                       |   299K|  4980K|       |   645   (1)| 00:00:01 |       |       |
|* 32 |       INDEX UNIQUE SCAN                              | SYS_C008868                    |     1 |       |       |     0   (0)| 00:00:01 |       |       |
|  33 |      TABLE ACCESS BY INDEX ROWID                     | GUARD                          |     1 |    23 |       |     1   (0)| 00:00:01 |       |       |
|* 34 |     TABLE ACCESS FULL                                | ACCOMMODATION                  | 10850 |   275K|       |  2093   (4)| 00:00:01 |       |       |
|* 35 |    TABLE ACCESS BY INDEX ROWID                       | CELL                           |     1 |    11 |       |     1   (0)| 00:00:01 |       |       |
|* 36 |     INDEX UNIQUE SCAN                                | SYS_C008883                    |     1 |       |       |     0   (0)| 00:00:01 |       |       |
|* 37 |   TABLE ACCESS BY INDEX ROWID                        | PRISON_BLOCK                   |     1 |     7 |       |     1   (0)| 00:00:01 |       |       |
|* 38 |    INDEX UNIQUE SCAN                                 | SYS_C008855                    |     1 |       |       |     0   (0)| 00:00:01 |       |       |
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   3 - access("P"."ID"="A"."FK_PRISONER")
   6 - access("P"."ID"="PC"."ID")
   8 - access("P"."ID"="PS"."ID")
  12 - filter(:EVENT_TYPE IS NULL OR INSTR("R"."REASON",:EVENT_TYPE)>0)
  13 - access("R"."ISSUE_DATE">=TO_DATE(:START_DATE,'YYYY-MM-DD') AND "R"."ISSUE_DATE"<=TO_DATE(:END_DATE,'YYYY-MM-DD'))
  14 - access("R"."FK_PRISONER"="P"."ID")
  16 - filter(:CRIME IS NULL OR INSTR("PS"."CRIME",:CRIME)>0)
  18 - access("P"."ID"="S"."FK_PRISONER")
  19 - filter(TO_CHAR(INTERNAL_FUNCTION("S"."START_DATE"),'YYYY-MM-DD')<=:START_DATE AND ("S"."REAL_END_DATE" IS NULL OR 
              TO_CHAR(INTERNAL_FUNCTION("S"."REAL_END_DATE"),'YYYY-MM-DD')>=:END_DATE))
  22 - filter((:SENTENCE_COUNT IS NULL OR COUNT(*)=TO_NUMBER(:SENTENCE_COUNT)) AND (:REPRIMAND_COUNT IS NULL OR COUNT(*)=TO_NUMBER(:REPRIMAND_COUNT)))
  25 - filter(TO_DATE(:END_DATE,'YYYY-MM-DD')>=TO_DATE(:START_DATE,'YYYY-MM-DD'))
  26 - access("P"."ID"="R"."FK_PRISONER")
  29 - access("P"."ID"="S"."FK_PRISONER")
  32 - access("R"."FK_GUARD"="G"."ID")
  34 - filter(TO_CHAR(INTERNAL_FUNCTION("A"."START_DATE"),'YYYY-MM-DD')<=:START_DATE AND ("A"."END_DATE" IS NULL OR 
              TO_CHAR(INTERNAL_FUNCTION("A"."END_DATE"),'YYYY-MM-DD')>=:END_DATE))
  35 - filter("C"."IS_SOLITARY"=TO_NUMBER(:IS_IN_SOLITARY) OR :IS_IN_SOLITARY IS NULL)
  36 - access("C"."ID"="A"."FK_CELL")
  37 - filter(:BLOCK_NUMBER IS NULL OR "PB"."BLOCK_NUMBER"=:BLOCK_NUMBER)
  38 - access("PB"."ID"="C"."FK_BLOCK")
 
Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - this is an adaptive plan
